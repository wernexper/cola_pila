/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cola;

import java.util.Iterator;
import java.util.LinkedList;

/**
 *
 * @author AlumnoManana
 */
public class Cola {

    private final LinkedList cola;
     
    public Cola(){this.cola = new LinkedList();}
    public void encolar (Object elemento){cola.add(elemento);}
    public Object desencolar(){return cola.remove();}
    public Object frente(){return cola.peek();}
    
    //inici esto es para Pilas
    public void insetaAdd(Object elemento){cola.addFirst(elemento);}
    public void insertaOffer(Object elemento){cola.offerFirst(elemento);}
    public void insetaPush(Object elemento){cola.push(elemento);}
    //final
    public void insetaAddlast(Object elemento){cola.addLast(elemento);}
    public void insetaBooleanOffer(Object elemento){cola.offer(elemento);}
    public void insetaBooleanOfferLast(Object elemento){cola.offerLast(elemento);}
    //devielve el primero de la lista sin eliminarlo 
    public Object devuelveElement(){ return cola.element();}
    public Object devuelveGetFirst(){ return cola.getFirst();}
    public Object devuelvePeek(){ return cola.peek();}
    public Object devuelvePeekFirst(){return cola.peekFirst();}
    
     //devuelve, elimina el primero de la lista
     public Object devuelvePoll(){return cola.poll();}
     public Object devuelvePollFirst(){return cola.pollFirst();}
     public Object devuelvePop(){return cola.pop();}
     public Object devuelveRemove(){return cola.remove();}
     public Object devuelveRemoveFirst(){return cola.removeFirst();}
     //devuelve el ultimo de la lista sin eliminarlo
     public Object devuelveGetLast(){return cola.getLast();}
     public Object devuelvePeekLast(){return cola.peekLast();}
     
     //devuelve y elimina el ultimo de la lista 
     public Object devuelvePollLast(){return cola.pollLast();}
     public Object devuelveRemoveLast(){return cola.removeLast();}
     //devuelve un iterador que permite recorrer los elemento de manrea descendente
     public void visualizar(){
         Iterator iter = cola.iterator();
         while (iter.hasNext()){
             System.out.printf("%d\t",iter.next());
         }
            System.out.println("");
     }
     public void recorer(){
         for(int i=0;i<cola.size();i++){
              System.out.println(cola.get(i));
         }
     }
     //personas tiene nobre y eded  
     // meter 5 alumnos como fila 
     //y meter 5 cola
     
     public void recorerForEach(){
            for(Object dato:cola){
                System.out.println(dato);
            }
        }
     
    public static void main(String[] args) {
         Cola c = new Cola();
       System.out.println(" Elemento frente:"+ c.frente());
       for(int i=1;i<=3;i++)
           c.encolar(i);
       System.out.println("elemento frente: "+c.frente());
       c.desencolar();
       System.out.println("elemento frente: "+c.frente());
       //inserta al inicio de la lista
       c.insetaAdd("pepe");
       System.out.println("elemento frente: "+c.frente());
       c.insertaOffer("paco");
       System.out.println("elemento frente: "+c.frente());
       c.insetaPush("maria");
       System.out.println("elemento frente: "+c.frente());
       // inserta al final de la fila 
       c.insetaAddlast("pepe");
       System.out.println("elemento frente: "+c.frente());
       c.insetaBooleanOffer("paco");
       System.out.println("elemento frente: "+c.frente());
       c.insetaBooleanOfferLast("maria");
       System.out.println("elemento frente: "+c.frente());
       // devuelve el elemento situado al comienzo de la lista sin eliminarlo 
      System.out.println( c.devuelveElement());
      
      System.out.println( c.devuelveGetFirst());
      System.out.println( c.devuelvePeek());
      System.out.println( c.devuelvePeekFirst());
      //devuelve, elimina el primero de la lista
        System.out.println(  c.devuelvePoll());
        System.out.println( c.devuelvePollFirst());
        System.out.println(  c.devuelvePop());
        System.out.println(  c.devuelveRemove());
        System.out.println( c.devuelveRemoveFirst());
       //devuelve el ultimo de la lista sin eliminarlo
        System.out.println(c.devuelveGetLast());
        System.out.println(c.devuelvePeekLast());
        
        //devuelve y elimina el ultimo de la lista 
         System.out.println("remove PollLast");
        System.out.println(c.devuelvePollLast());
        System.out.println("remove last");
       
        System.out.println(c.devuelveRemoveLast());
        c.recorerForEach();
       //devuelve un iterador que permite recorrer los elemento de manrea descendente
       
        
    }   
}
